generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  emailVerified DateTime?
  image String?
  accoutns Account[]
  sessions Session[]
}

model Store {
  id              Int     @id @default(autoincrement())
  phone           String? // tel_no
  address         String? // rdn_code_nm
  lat             String // y_dnts
  lng             String // x-cnts
  name            String? //upso_nm
  category        String? // bizcnd_code_nm
  storeType       String? // cob_code_nm
  foodCertifyName String? // crtfc_gbn_nm
}


model Account {
  id                 String  @id @default(cuid())
  userId             Int  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       Int   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}
